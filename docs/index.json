[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/gof-db-listeners.js",
    "content": "/** \n * geo on fire database listeners class\n */\nexport default class GofDbListeners {\n  /**\n   * Attaches the database listeners based on the event type.\n   * The firebase event \"child_moved\" gets not supported.\n   *\n   * @param {string} type The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\".\n   * @param {Object} dbRef The dbRef object containing the entries and locations path.\n   * @param {Array.<string>} geohashes The geohashes based on the active query.\n   * @param {Object} event The query event object.\n   * @return {Array.<Object>} An array containing the listeners reference.\n   */\n  static attachDbListeners(type, dbRef, geohashes, event) {\n    let listeners = [];\n\n    if (type === \"value\") {\n      listeners = this.onValue(dbRef, geohashes, event);\n    } else if (type === \"child_added\") {\n      listeners = this.onChildAdded(dbRef, geohashes, event);\n    } else if (type === \"child_changed\") {\n      listeners = this.onChildChanged(dbRef, geohashes, event);\n    } else if (type === \"child_removed\") {\n      listeners = this.onChildRemoved(dbRef, geohashes, event);\n    }\n\n    return listeners;\n  }\n\n  /**\n   * Fires the geo query event based on firebase's \"value\" event.\n   * Returns an array with all the listeners. (needed to use .off() later on)\n   *\n   * @param {Object} dbRef The dbRef object containing the entries and locations path.\n   * @param {Array.<string>} geohashes The geohashes based on the active query.\n   * @param {Object} event The query event object.\n   * @return {Array.<Object>} An array containing the reference of all \"value\" listeners.\n   */\n  static onValue(dbRef, geohashes, event) {\n    const listeners = [];\n\n    geohashes.forEach((geohash) => {\n      dbRef.geohashes.child(geohash).on(\"value\", (data) => {\n        window.dispatchEvent(event);\n      });\n\n      const ref = dbRef.geohashes.child(geohash);\n      listeners.push(ref);\n    });\n\n    return listeners;\n  }\n\n  /**\n   * Fires the geo query event based on firebase's \"child_added\" event.\n   * Returns an array with all the listeners. (needed to use .off() later on)\n   *\n   * @param {Object} dbRef The dbRef object containing the entries and locations path.\n   * @param {Array.<string>} geohashes The geohashes based on the active query.\n   * @param {Object} event The query event object.\n   * @return {Array.<Object>} An array containing the reference of all \"value\" listeners.\n   */\n  static onChildAdded(dbRef, geohashes, event) {\n    const listeners = [];\n      \n    geohashes.forEach((geohash) => {\n      dbRef.geohashes.child(geohash).on(\"child_added\", (data) => {\n        window.dispatchEvent(event);\n      })\n\n      const ref = dbRef.geohashes.child(geohash);\n      listeners.push(ref);\n    });\n\n    return listeners;\n  }\n\n  /**\n   * Fires the geo query event based on firebase's \"child_changed\" event.\n   * Returns an array with all the listeners. (needed to use .off() later on)\n   *\n   * @param {Object} dbRef The dbRef object containing the entries and locations path.\n   * @param {Array.<string>} geohashes The geohashes based on the active query.\n   * @param {Object} event The query event object.\n   * @return {Array.<Object>} An array containing the reference of all \"value\" listeners.\n   */\n  static onChildChanged(dbRef, geohashes, event) {\n    const listeners = []; \n\n    geohashes.forEach((geohash) => {\n      dbRef.geohashes.child(geohash).on(\"child_changed\", (data) => {\n        window.dispatchEvent(event);\n      });\n\n      const ref = dbRef.geohashes.child(geohash);\n      listeners.push(ref);\n    });\n      \n    return listeners;\n  }\n\n  /**\n   * Fires the geo query event based on firebase's \"child_removed\" event.\n   * Returns an array with all the listeners. (needed to use .off() later on)\n   *\n   * @param {Object} dbRef The dbRef object containing the entries and locations path.\n   * @param {Array.<string>} geohashes The geohashes based on the active query.\n   * @param {Object} event The query event object.\n   * @return {Array.<Object>} An array containing the reference of all \"value\" listeners.\n   */\n  static onChildRemoved(dbRef, geohashes, event) {\n    const listeners = []; \n      \n    geohashes.forEach((geohash) => {\n      dbRef.geohashes.child(geohash).on(\"child_removed\", (data) => {\n        window.dispatchEvent(event);\n      });\n\n      const ref = dbRef.geohashes.child(geohash);\n      listeners.push(ref);\n    });\n      \n    return listeners;  \n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/gof-db-listeners.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "GofDbListeners",
    "memberof": "src/gof-db-listeners.js",
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners",
    "access": "public",
    "export": true,
    "importPath": "gof/src/gof-db-listeners.js",
    "importStyle": "GofDbListeners",
    "description": "geo on fire database listeners class",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "name": "attachDbListeners",
    "memberof": "src/gof-db-listeners.js~GofDbListeners",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners.attachDbListeners",
    "access": "public",
    "description": "Attaches the database listeners based on the event type.\nThe firebase event \"child_moved\" gets not supported.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\"."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dbRef",
        "description": "The dbRef object containing the entries and locations path."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes based on the active query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The query event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Object>"
      ],
      "spread": false,
      "description": "An array containing the listeners reference."
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "onValue",
    "memberof": "src/gof-db-listeners.js~GofDbListeners",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners.onValue",
    "access": "public",
    "description": "Fires the geo query event based on firebase's \"value\" event.\nReturns an array with all the listeners. (needed to use .off() later on)",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dbRef",
        "description": "The dbRef object containing the entries and locations path."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes based on the active query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The query event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Object>"
      ],
      "spread": false,
      "description": "An array containing the reference of all \"value\" listeners."
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "onChildAdded",
    "memberof": "src/gof-db-listeners.js~GofDbListeners",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners.onChildAdded",
    "access": "public",
    "description": "Fires the geo query event based on firebase's \"child_added\" event.\nReturns an array with all the listeners. (needed to use .off() later on)",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dbRef",
        "description": "The dbRef object containing the entries and locations path."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes based on the active query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The query event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Object>"
      ],
      "spread": false,
      "description": "An array containing the reference of all \"value\" listeners."
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "onChildChanged",
    "memberof": "src/gof-db-listeners.js~GofDbListeners",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners.onChildChanged",
    "access": "public",
    "description": "Fires the geo query event based on firebase's \"child_changed\" event.\nReturns an array with all the listeners. (needed to use .off() later on)",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dbRef",
        "description": "The dbRef object containing the entries and locations path."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes based on the active query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The query event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Object>"
      ],
      "spread": false,
      "description": "An array containing the reference of all \"value\" listeners."
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "onChildRemoved",
    "memberof": "src/gof-db-listeners.js~GofDbListeners",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-db-listeners.js~GofDbListeners.onChildRemoved",
    "access": "public",
    "description": "Fires the geo query event based on firebase's \"child_removed\" event.\nReturns an array with all the listeners. (needed to use .off() later on)",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dbRef",
        "description": "The dbRef object containing the entries and locations path."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes based on the active query."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "The query event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Object>"
      ],
      "spread": false,
      "description": "An array containing the reference of all \"value\" listeners."
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/gof-db.js",
    "content": "import GofUtils from \"./gof-utils\";\n\n/** \n * geo on fire database class\n */\nexport default class GofDb {\n  /**\n   * \n   * @param {string} name Name for the Gof query.\n   * @param {Firebase} db The Firebase database reference - database().ref().\n   */\n  constructor(name, db) {\n    const validName = name.replace(\" \", \"-\").toLowerCase();\n\n    this._refs = {\n      entries: db.child(`${validName}`),\n      geohashes: db.child(`${validName}-geo`),\n    }\n\n    // pass reference for the utils\n    this._utils = GofUtils;\n  }\n\n  /**\n   * Pushes a new entry to the database.\n   *\n   * @param {Object} entry The new entry object.\n   * @return {Promise.<Object>} A promise which is fulfilled once the entry was created.\n   */\n  pushEntry(entry) {\n    return this._refs.entries.push(entry);\n  }\n\n  /**\n   * Gets the Geohash based on the locations coordinates.\n   *\n   * @param {string} pushKey The firebase push-key of the entry.\n   * @param {Object} entry The entry to create.\n   * @param {Array.<string>} geohashes The geohashes which the entry belongs to.\n   * @return {Promise} A promise which is fulfilled once all the locations are set.\n   */\n  setGeohashLocations(pushKey, entry, geohashes) {        \n    return Promise.all(this.getLocationNodesToAdd(pushKey, entry, geohashes));\n  }\n    \n  /**\n   * Fetchs all the entries based on the provided entry push keys\n   *\n   * @param {Array.<string>} pushKeys The push-keys of all the provided locations.\n   * @param {number} startAt The entry to start at.\n   * @param {number} endAt The etnry to end at.\n   * @return {Promise.<Object>} A promise which is fulfilled once the locations are fetched.\n   */\n  fetchLocations(pushKeys, startAt, endAt) {\n    const fetchedDataPromises = [];\n\n    if (endAt) {\n      // if endat is bigger than the number of entries limitate it to the last entry,\n      const endAtLimitation = endAt > pushKeys.length ? pushKeys.length : endAt;\n\n      for (let i = startAt - 1; i < endAtLimitation; i += 1) {\n        fetchedDataPromises.push(\n          this._refs.entries.child(`${pushKeys[i]}`).once(\"value\"),\n        );\n      }\n    } else {\n      for (let i = startAt - 1; i < (pushKeys.length - (startAt - 1)); i += 1) {\n        fetchedDataPromises.push(\n          this._refs.entries.child(`${pushKeys[i]}`).once(\"value\"),\n        );\n      }\n    }\n\n    return Promise.all(fetchedDataPromises);\n  }\n\n  /**\n   * Returns all the locations based on the given geohashes.\n   *\n   * @param {Array.<string>} geohashes The given geohashes.\n   * @return {Promise.<Object>} A promise which is fulfilled once the locations return.\n   */\n  getLocationsFromGeohashes(geohashes) {\n    const locations = [];\n\n    for (let i = 0; i < geohashes.length; i += 1) {\n      locations.push(\n        this._refs.geohashes.child(`${geohashes[i]}`).once(\"value\"),\n      );\n    }\n\n    return Promise.all(locations)\n      .catch(() => {\n        throw new Error(\"Unable to get the entries.\");\n      });\n  }\n\n  /**\n   * Updates all the entry and the accroding locations based on the new value.\n   * It also removes old and adds new locations, \n   * based on the difference between the old and new geohashes.\n   * This guarantees that the right event listeners will be triggered.\n   * \n   *\n   * @param {string} pushKey The firebase push-key of the entry\n   * @param {Object} newValue The value of the new entry\n   * @param {number} priority The priority of the entry.\n   * @return {Promise} A promise which is fulfilled once the entry and the locations are updated.\n   */\n  updateEntry(pushKey, newValue, priority) {\n    const newValueWithPrecisions = this._utils.setPrecisionsForEntry(priority, newValue);\n    const newGeohash = this._utils.getGeohashByLocation(\n      newValue.location, \n      newValueWithPrecisions.maxPrecision,\n    );\n    const newGeohashPrecisions = this._utils.getGeohashPrecisions(\n      newGeohash, \n      newValueWithPrecisions.minPrecision, \n      newValueWithPrecisions.maxPrecision,\n    );\n\n    return this._refs.entries.child(`${pushKey}`).once(\"value\")\n      .then((entry) => {\n        const entryValue = entry.val();\n        const currentGeohash = this._utils.getGeohashByLocation(\n          entryValue.location, \n          entryValue.maxPrecision,\n        );\n        const currentGeohashPrecisions = this._utils.getGeohashPrecisions(\n          currentGeohash, \n          entryValue.minPrecision, \n          entryValue.maxPrecision,\n        );\n\n        // if location changed update also the location nodes\n        const promiseQueue = [];\n        const geohashesByAction = this._utils.getGeohashActions(\n          currentGeohashPrecisions, \n          newGeohashPrecisions,\n        );\n\n        // add nodes to add in queue\n        promiseQueue.concat(this.getLocationNodesToAdd(\n          pushKey, \n          newValue.location, \n          geohashesByAction.add,\n        ));\n          \n        // add nodes to update in queue - gets executed even if location is the same as bevor\n        promiseQueue.concat(this.getLocationNodesToUpdate(\n          pushKey, \n          newValue.location, \n          geohashesByAction.update,\n        ));\n\n        // add nodes to delete in queue\n        promiseQueue.concat(this.getLocationNodesToDelete(pushKey, geohashesByAction.delete));\n\n        // finally also update the entry itslef\n        promiseQueue.push(this._refs.entries.child(`${pushKey}`).update(newValue));\n\n        return Promise.all(promiseQueue);\n      })\n      .catch(() => {\n        throw new Error(`\n          Unable to update the entry, Make sure the entry with \"${pushKey}\" exists\n        `);\n      });\n  }\n\n  /**\n   * Deletes an existing entry and all the according locations.\n   *\n   * @param {string} pushKey The firebase push-key of the entry.\n   * @return {Promise} A promise which is fulfilled once the entry and the locations are deleted.\n   */\n  deleteEntry(pushKey) {\n    return this._refs.entries.child(`${pushKey}`).once(\"value\")\n      .then((entry) => {\n        const entryValue = entry.val();\n        const geohash = this._utils.getGeohashByLocation(\n          entryValue.location, \n          entryValue.maxPrecision,\n        );\n        const geohashPrecisions = this._utils.getGeohashPrecisions(\n          geohash, \n          entryValue.minPrecision, \n          entryValue.maxPrecision,\n        );\n        const deleteQueue = this.getLocationNodesToDelete(entry.key, geohashPrecisions);\n            \n        // adds the entry itself to the delete queue\n\n        deleteQueue.push(this._refs.entries.child(`${entry.key}`).remove());\n\n        return Promise.all(deleteQueue);\n      })\n      .catch(() => {\n        throw new Error(`\n          Unable to delete the entry, Make sure the entry with \"${pushKey}\" exists\n        `);\n      });\n  }\n\n\n  /**\n   * Returns all the nodes to add based on the entries geohashes.\n   *\n   * @param {string} pushKey The firebase push-key of the entry.\n   * @param {Object} value The value of the location.\n   * @param {Array.<string>} geohashes The geohash precisions which the entry belongs to.\n   * @return {Array.<Promise>} An array of promises, gets fullifilled once the location gets added.\n   */\n  getLocationNodesToAdd(pushKey, value, geohashes) {\n    const addQueue = [];\n\n    // adding all the existing locations to the add queue\n    for (let i = 0; geohashes.length > i; i += 1) {\n      addQueue.push(this._refs.geohashes.child(`${geohashes[i]}/${pushKey}`).set(value));\n    }\n\n    return addQueue;\n  }\n\n  /**\n   * Returns all the nodes to update based on the entries geohashes.\n   *\n   * @param {string} pushKey The firebase push-key of the entry.\n   * @param {Object} newValue The new value of the location.\n   * @param {Array.<string>} geohashes The geohash precisions which the entry belongs to.\n   * @return {Array.<Promise>} An array of promises, gets fullifilled once the location gets added.\n   */\n  getLocationNodesToUpdate(pushKey, newValue, geohashes) {\n    const updateQueue = [];\n\n    // adding all the existing locations to the update queue\n    for (let i = 0; geohashes.length > i; i += 1) {\n      updateQueue\n        .push(this._refs.geohashes.child(`${geohashes[i]}/${pushKey}`).update(newValue));\n    }\n\n    return updateQueue;\n  }\n  \n  /**\n   * Returns all the nodes to delete based on the entries geohashes.\n   *\n   * @param {string} pushKey The firebase push-key of the entry.\n   * @param {Array.<string>} geohashes The geohash precisions which the entry belongs to.\n   * @return {Array.<Promise>} An array of promises, gets fullifilled once the location gets added.\n   */\n  getLocationNodesToDelete(pushKey, geohashes) {\n    const deleteQueue = [];\n\n    // adding all the existing locations to the delete queue\n    for (let i = 0; geohashes.length > i; i += 1) {\n      deleteQueue\n        .push(this._refs.geohashes.child(`${geohashes[i]}/${pushKey}`).remove());\n    }\n\n    return deleteQueue;\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/gof-db.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "class",
    "name": "GofDb",
    "memberof": "src/gof-db.js",
    "static": true,
    "longname": "src/gof-db.js~GofDb",
    "access": "public",
    "export": true,
    "importPath": "gof/src/gof-db.js",
    "importStyle": "GofDb",
    "description": "geo on fire database class",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 57,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name for the Gof query."
      },
      {
        "nullable": null,
        "types": [
          "Firebase"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": "The Firebase database reference - database().ref()."
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "_refs",
    "memberof": "src/gof-db.js~GofDb",
    "static": false,
    "longname": "src/gof-db.js~GofDb#_refs",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "{\"entries\": *, \"geohashes\": *}"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "_utils",
    "memberof": "src/gof-db.js~GofDb",
    "static": false,
    "longname": "src/gof-db.js~GofDb#_utils",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "pushEntry",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#pushEntry",
    "access": "public",
    "description": "Pushes a new entry to the database.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The new entry object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry was created."
    }
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "setGeohashLocations",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#setGeohashLocations",
    "access": "public",
    "description": "Gets the Geohash based on the locations coordinates.",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The entry to create."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohashes which the entry belongs to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once all the locations are set."
    }
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "fetchLocations",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#fetchLocations",
    "access": "public",
    "description": "Fetchs all the entries based on the provided entry push keys",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKeys",
        "description": "The push-keys of all the provided locations."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startAt",
        "description": "The entry to start at."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The etnry to end at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the locations are fetched."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "getLocationsFromGeohashes",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#getLocationsFromGeohashes",
    "access": "public",
    "description": "Returns all the locations based on the given geohashes.",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The given geohashes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the locations return."
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "updateEntry",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#updateEntry",
    "access": "public",
    "description": "Updates all the entry and the accroding locations based on the new value.\nIt also removes old and adds new locations, \nbased on the difference between the old and new geohashes.\nThis guarantees that the right event listeners will be triggered.",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The value of the new entry"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "The priority of the entry."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry and the locations are updated."
    }
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "deleteEntry",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#deleteEntry",
    "access": "public",
    "description": "Deletes an existing entry and all the according locations.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry and the locations are deleted."
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "getLocationNodesToAdd",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#getLocationNodesToAdd",
    "access": "public",
    "description": "Returns all the nodes to add based on the entries geohashes.",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value of the location."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohash precisions which the entry belongs to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Promise>"
      ],
      "spread": false,
      "description": "An array of promises, gets fullifilled once the location gets added."
    }
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "getLocationNodesToUpdate",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#getLocationNodesToUpdate",
    "access": "public",
    "description": "Returns all the nodes to update based on the entries geohashes.",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The new value of the location."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohash precisions which the entry belongs to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Promise>"
      ],
      "spread": false,
      "description": "An array of promises, gets fullifilled once the location gets added."
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "getLocationNodesToDelete",
    "memberof": "src/gof-db.js~GofDb",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof-db.js~GofDb#getLocationNodesToDelete",
    "access": "public",
    "description": "Returns all the nodes to delete based on the entries geohashes.",
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashes",
        "description": "The geohash precisions which the entry belongs to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Promise>"
      ],
      "spread": false,
      "description": "An array of promises, gets fullifilled once the location gets added."
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/gof-utils.js",
    "content": "import ngeohash from \"ngeohash\";\n\n/** \n * geo on fire utils\n */\nexport default class GofUtils {\n  /**\n   * Returns a geohash based on the provided location and the precision.\n   * e.g. \"abcdef\" would be a precision of 6 (number of characters)\n   *\n   * @param {Object} location The location object with the coordinates. (lat/lng)\n   * @param {string} precision The precision for the returning geohash.\n   * @return {string} The calculated geohash string.\n   */\n  static getGeohashByLocation(location, precision) {\n    return ngeohash.encode(location.lat, location.lng, precision);\n  }\n\n  /**\n   * Returns the Geohash precisions based on the min and max precision.\n   * e.g. min = 5 and max = 7 would return [\"abcdefg\", \"abcdef\", \"abcde\"]\n   *\n   * @param {string} geohash The geohash string with the maximum length.\n   * @param {number} minPrecision The minimal precision for the geohash.\n   * @param {number} maxPrecision The maximum precision for the geohash.\n   * @return {Array.<string>} The geohash precisions.\n   */\n  static getGeohashPrecisions(geohash, minPrecision, maxPrecision) {\n    const geohashes = [];\n\n    for (let i = 0; maxPrecision - minPrecision >= i; i += 1) {\n      geohashes.push(geohash.substring(0, geohash.length - i));\n    }\n\n    return geohashes;\n  }\n\n  /**\n   * Sets the geohash precisions of an entry.\n   *\n   * @param {number} priority The priority of the new entry.\n   * @param {Object} entry The entry object to set the precisions for.\n   * @return {Object} The entry with the precisions set.\n   */\n  static setPrecisionsForEntry(priority, entry) {\n    const entryWithPrecisions = entry;\n\n    entryWithPrecisions.minPrecision = priority;\n    entryWithPrecisions.maxPrecision = 9; // default precision should not be changed\n\n    return entryWithPrecisions;\n  }\n\n  /**\n   * Returns the geohash add, update and delete actions based on existing and new geohashes.\n   * This function guarantes that the event listeners get triggered correctly.\n   * \n   * e.g. currentGeohashes = [\"a\", \"b\", \"c\"] and newGeohashes = [\"b\", \"c\", \"d\"] would return\n   * add: [\"d\"], update: [\"b\", \"c\"], delete: [\"a\"]\n   * \n   * @param {Array.<string>} currentGeohashes The geohashes based on the current location.\n   * @param {Array.<string>} newGeohashes The geohashes based on the new location.\n   * @return {Object} An object containing the geohashes for the add, update and delete action.\n   */\n  static getGeohashActions(currentGeohashes, newGeohashes) {\n    const geohashesByAction = {};\n\n    geohashesByAction.add = newGeohashes.filter(x => currentGeohashes.indexOf(x) < 0);\n    geohashesByAction.delete = currentGeohashes.filter(x => newGeohashes.indexOf(x) < 0);\n    geohashesByAction.update = currentGeohashes.filter(\n      x => geohashesByAction.add.concat(geohashesByAction.delete).indexOf(x) < 0,\n    );\n\n    return geohashesByAction;\n  }\n\n  /**\n   * Returns all the visible Geohashes within the given Boundaries (also overlapping geohashes)\n   * The geohash length will be calculated from the given precision.\n   * \n   * This function works as a preselection for the entries \n   * and protects tons of them from running through an unnecessary query.\n   *\n   * @param {Object} boundaries The boundaries object which builds the rectangle query borders.\n   * @param {number} precision The precision of the geohashes to return.\n   * @return {Array.<string>} An array containing all the geohashes within the prvided boundaries.\n   */\n  static getGeohashesInBoundaries(boundaries, precision) {\n    return ngeohash.bboxes(\n      boundaries.sw.lat, \n      boundaries.sw.lng, \n      boundaries.ne.lat, \n      boundaries.ne.lng, precision,\n    );\n  }\n\n  /**\n   * Returns all the keys of locations which are inside the provided boundaries\n   * This is the one and onliest query which will be executed for the boundary search.\n   *\n   * @param {Array.<Promise>} geohashNode The db nodes based on the geohashes within the boundaries.\n   * @param {Object} boundaries The boundaries object which builds the rectangle query borders.\n   * @return {Promise} A promise which gets fullifilled when all the locations are returned.\n   */\n  static getLocationsInBoundaries(geohashNode, boundaries) {\n    const promises = [];\n\n    geohashNode.map((locations) => {\n      // check if locations node exists\n      if (locations.val()) {\n        locations.forEach((location) => {\n          // check if single location is within boundaries\n          if (this.isInBoundaries(location.val(), boundaries)) {\n            promises.push(new Promise((resolve, reject) => {\n              resolve(location.key);\n            }));\n          }\n        });\n      }\n\n      return false;\n    });\n\n    return Promise.all(promises);\n  }\n\n  /**\n   * Checks if the given location is within the boundaries.\n   * This needs to be done, since there are also overalpping locations, \n   * which are outside of the boundaries.\n   * \n   * @param {Object} location The the location to check.\n   * @param {Object} boundaries The boundaries to compare with.\n   * @return {boolean} Says if the location is in or outside of the provided boundaries\n   */\n  static isInBoundaries(location, boundaries) {\n    let isInBoundaries = false;\n    \n    if (boundaries.sw.lat <= location.lat && boundaries.sw.lng <= location.lng \n        && boundaries.ne.lat >= location.lat && boundaries.ne.lng >= location.lng) {  \n      isInBoundaries = true;\n    }\n\n    return isInBoundaries;\n  }\n\n  /**\n   * Returns the boundaries from the provided radius based on the center's location.\n   * Basically the function converts the circle(from radius)into a rectangle.\n   * This brings a huge performance gain, since the values can get preselected.\n   * \n   * @param {Object} center Location object which represents the center of the given radius.\n   * @param {number} radius The query radius in kilometers.\n   * @return {Object} The boundaries based on the given radius circle.\n   */\n  static getBoundariesFromRadius(center, radius) {\n    // one degree in kilometers for latitude - without Earth's polar flattening\n    const LatOneDeg = 110.54;\n    \n    // kilometeres\n    const LngOneDeg = 111.320;\n    const boundaries = { sw: {}, ne: {} };\n\n    boundaries.sw.lat = center.lat - ((1 / LatOneDeg) * radius);\n    boundaries.sw.lng = \n      center.lng - ((1 / (LngOneDeg * Math.cos(this.degreesToRadians(center.lat)))) * radius);\n    boundaries.ne.lat = center.lat + ((1 / LatOneDeg) * radius)\n    boundaries.ne.lng = \n      center.lng + ((1 / (LngOneDeg * Math.cos(this.degreesToRadians(center.lat)))) * radius);\n    \n    return boundaries;\n  }\n\n  /**\n   * Returns all the keys of locations which are inside the provided radius\n   * This is the one and onliest query which will be executed for the boundary search.\n   *\n   * @param {Array.<Promise>} geohashNode The db nodes based on the geohashes within the radius.\n   * @param {Object} center Location object which represents the center of the given radius.\n   * @param {number} radius The query radius in kilometers.\n   * @return {Promise} A promise which gets fullifilled when all the locations are returned.\n   */\n  static getLocationsInRadius(geohashNode, center, radius) {\n    const promises = [];\n\n    geohashNode.map((locations) => {\n      // check if locations node exists\n      if (locations.val()) {\n        locations.forEach((location) => {\n          // check if single location is within radius\n          if (this.isInRadius(location.val(), center, radius)) {\n            promises.push(new Promise((resolve, reject) => {\n              resolve(location.key);\n            }));\n          }\n        });\n      }\n\n      return false;\n    });\n\n    return Promise.all(promises);\n  }\n\n  /**\n   * Checks if the given location is within the provided radius.\n   * This needs to be done, since there are also overalpping locations,\n   * which our outside of the radius.\n   * \n   * @param {Object} location The the location to check.\n   * @param {Object} center Location object which represents the center of the given radius.\n   * @param {number} radius The query radius in kilometers.\n   * @return {boolean} Says if location is in or outside of the radius.\n   */\n  static isInRadius(location, center, radius) {\n    let isInRadius = false;\n    \n    if (this.distBtwLocations(location, center) <= radius) {\n      isInRadius = true;\n    }\n\n    return isInRadius;\n  }\n\n  /**\n   * Calculates the distance between the provided location the given center.\n   * \n   * @param {Object} location The the location to get the ditstance from.\n   * @param {Object} center Location object which represents the center of the given radius.\n   * @return {number} Says if location is in or outside of boundaries\n   */\n  static distBtwLocations(location, center) {\n    const radlatCenter = (Math.PI * center.lat) / 180;\n    const radlatLocation = (Math.PI * location.lat) / 180;\n    const theta = center.lng - location.lng;\n    const radtheta = (Math.PI * theta) / 180;\n    let distance = (Math.sin(radlatCenter) * Math.sin(radlatLocation)) + \n      (Math.cos(radlatCenter) * Math.cos(radlatLocation) * Math.cos(radtheta));\n\n    distance = Math.acos(distance);\n    distance = (distance * 180) / Math.PI;\n    distance = distance * 60 * 1.1515;\n    distance *= 1.609344;\n\n    return distance;\n  }\n\n  /**\n   * Calculates the geohash precisions based on the distance between the boundaries.\n   * to be optimized...\n   * \n   * @param {Object} boundaries The boundaries to calculate the precisions from.\n   * @return {number} The calculated precison to work with.\n   */\n  static caluclatePrecisionFromBoundaries(boundaries) {\n    let precision;\n    const distBtwBoundaries = this.distBtwLocations(\n      { \n        lat: boundaries.sw.lat, \n        lng: boundaries.sw.lng,\n      }, \n      { \n        lat: boundaries.ne.lat, \n        lng: boundaries.ne.lng,\n      },\n    );\n    \n    if (distBtwBoundaries < 0.02) {\n      precision = 9;\n    } else if (distBtwBoundaries < 0.1) {\n      precision = 8;\n    }  else if (distBtwBoundaries < 0.7) {\n      precision = 7;\n    }  else if (distBtwBoundaries < 4) {\n      precision = 6;\n    } else if (distBtwBoundaries < 25) {\n      precision = 5;\n    } else if (distBtwBoundaries < 150) {\n      precision = 4;\n    } else if (distBtwBoundaries < 800) {\n      precision = 3;\n    } else if (distBtwBoundaries <  4000) {\n      precision = 2;\n    } else {\n      precision = 1;\n    }\n\n    return precision;\n  }\n\n  /**\n   * Converts degrees to radians.\n   * \n   * @param {number} degrees The string with the number of degrees to convert.\n   * @return {number} The converted radians.\n   */\n  static degreesToRadians(degrees) {\n    return (degrees * Math.PI) / 180;\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/gof-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "class",
    "name": "GofUtils",
    "memberof": "src/gof-utils.js",
    "static": true,
    "longname": "src/gof-utils.js~GofUtils",
    "access": "public",
    "export": true,
    "importPath": "gof/src/gof-utils.js",
    "importStyle": "GofUtils",
    "description": "geo on fire utils",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "getGeohashByLocation",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getGeohashByLocation",
    "access": "public",
    "description": "Returns a geohash based on the provided location and the precision.\ne.g. \"abcdef\" would be a precision of 6 (number of characters)",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "The location object with the coordinates. (lat/lng)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "precision",
        "description": "The precision for the returning geohash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The calculated geohash string."
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "getGeohashPrecisions",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getGeohashPrecisions",
    "access": "public",
    "description": "Returns the Geohash precisions based on the min and max precision.\ne.g. min = 5 and max = 7 would return [\"abcdefg\", \"abcdef\", \"abcde\"]",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "geohash",
        "description": "The geohash string with the maximum length."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "minPrecision",
        "description": "The minimal precision for the geohash."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPrecision",
        "description": "The maximum precision for the geohash."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": "The geohash precisions."
    }
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "setPrecisionsForEntry",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.setPrecisionsForEntry",
    "access": "public",
    "description": "Sets the geohash precisions of an entry.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "The priority of the new entry."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The entry object to set the precisions for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The entry with the precisions set."
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "getGeohashActions",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getGeohashActions",
    "access": "public",
    "description": "Returns the geohash add, update and delete actions based on existing and new geohashes.\nThis function guarantes that the event listeners get triggered correctly.\n\ne.g. currentGeohashes = [\"a\", \"b\", \"c\"] and newGeohashes = [\"b\", \"c\", \"d\"] would return\nadd: [\"d\"], update: [\"b\", \"c\"], delete: [\"a\"]",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "currentGeohashes",
        "description": "The geohashes based on the current location."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "newGeohashes",
        "description": "The geohashes based on the new location."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object containing the geohashes for the add, update and delete action."
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "getGeohashesInBoundaries",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getGeohashesInBoundaries",
    "access": "public",
    "description": "Returns all the visible Geohashes within the given Boundaries (also overlapping geohashes)\nThe geohash length will be calculated from the given precision.\n\nThis function works as a preselection for the entries \nand protects tons of them from running through an unnecessary query.",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "The boundaries object which builds the rectangle query borders."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "precision",
        "description": "The precision of the geohashes to return."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": "An array containing all the geohashes within the prvided boundaries."
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "getLocationsInBoundaries",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getLocationsInBoundaries",
    "access": "public",
    "description": "Returns all the keys of locations which are inside the provided boundaries\nThis is the one and onliest query which will be executed for the boundary search.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<Promise>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashNode",
        "description": "The db nodes based on the geohashes within the boundaries."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "The boundaries object which builds the rectangle query borders."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise which gets fullifilled when all the locations are returned."
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "isInBoundaries",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.isInBoundaries",
    "access": "public",
    "description": "Checks if the given location is within the boundaries.\nThis needs to be done, since there are also overalpping locations, \nwhich are outside of the boundaries.",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "The the location to check."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "The boundaries to compare with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Says if the location is in or outside of the provided boundaries"
    }
  },
  {
    "__docId__": 78,
    "kind": "method",
    "name": "getBoundariesFromRadius",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getBoundariesFromRadius",
    "access": "public",
    "description": "Returns the boundaries from the provided radius based on the center's location.\nBasically the function converts the circle(from radius)into a rectangle.\nThis brings a huge performance gain, since the values can get preselected.",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius in kilometers."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The boundaries based on the given radius circle."
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "getLocationsInRadius",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.getLocationsInRadius",
    "access": "public",
    "description": "Returns all the keys of locations which are inside the provided radius\nThis is the one and onliest query which will be executed for the boundary search.",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array.<Promise>"
        ],
        "spread": false,
        "optional": false,
        "name": "geohashNode",
        "description": "The db nodes based on the geohashes within the radius."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius in kilometers."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise which gets fullifilled when all the locations are returned."
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "isInRadius",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.isInRadius",
    "access": "public",
    "description": "Checks if the given location is within the provided radius.\nThis needs to be done, since there are also overalpping locations,\nwhich our outside of the radius.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "The the location to check."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius in kilometers."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Says if location is in or outside of the radius."
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "distBtwLocations",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.distBtwLocations",
    "access": "public",
    "description": "Calculates the distance between the provided location the given center.",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "location",
        "description": "The the location to get the ditstance from."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Says if location is in or outside of boundaries"
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "caluclatePrecisionFromBoundaries",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.caluclatePrecisionFromBoundaries",
    "access": "public",
    "description": "Calculates the geohash precisions based on the distance between the boundaries.\nto be optimized...",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "The boundaries to calculate the precisions from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The calculated precison to work with."
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "degreesToRadians",
    "memberof": "src/gof-utils.js~GofUtils",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/gof-utils.js~GofUtils.degreesToRadians",
    "access": "public",
    "description": "Converts degrees to radians.",
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "degrees",
        "description": "The string with the number of degrees to convert."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The converted radians."
    }
  },
  {
    "__docId__": 84,
    "kind": "file",
    "name": "src/gof.js",
    "content": "import GofUtils from \"./gof-utils\";\nimport GofDb from \"./gof-db\";\nimport GofValidation from \"./validation/validation\";\nimport GofDbListeners from \"./gof-db-listeners\";\n\n/** \n * geo on fire entry point \n */\nexport default class Gof {\n  /**\n   * \n   * @param {string} name - Name for the Gof query.\n   * @param {Firebase} db - The Firebase database reference - database().ref()\n   */\n  constructor(name, db) {\n    GofValidation.validateConstructor(name, db, \"geoOnFire()\");\n    this._utils = GofUtils;\n    this._db = new GofDb(name, db);\n    this.registerEvents();\n\n    // holds the current query infos\n    this._activeQuery = {\n      geohashes: [],\n      entries: [],\n      parameters: [],\n      dbListeners: [],\n    }\n  }\n\n  /**\n   * Sets the active query object with all locations from a given radius(km).\n   * The reulst can be limited with startAt and endAt. e.g. 1 - 50\n   * \n   * Needs to be called in a function chain with .on() or .once()\n   *\n   * @param {Object} center Location object which represents the center of the given radius.\n   * @param {number} radius The query radius in kilometers.\n   * @param {number} [startAt=1] The entry to start at - e.g. start for pagination.\n   * @param {number} [endAt=undefined] The etnry to end at. Default returns all.\n   * @return {function} The function itself to make .on() and .once() chains possible.\n   */\n  getLocationsByRadius(center, radius, startAt = 1, endAt = undefined) {\n    GofValidation.validateLocationsByRadius(\n      center, \n      radius, \n      startAt, \n      endAt, \n      \"getLocationsByRadius()\",\n    );\n\n    this._activeQuery.parameters = { center, radius, startAt, endAt }\n\n    const boundaries = this._utils.getBoundariesFromRadius(center, radius);\n    const precision = this._utils.caluclatePrecisionFromBoundaries(boundaries);\n    this._activeQuery.geohashes = this._utils.getGeohashesInBoundaries(boundaries, precision);\n\n    this._activeQuery.entries = this._db.getLocationsFromGeohashes(this._activeQuery.geohashes)\n      .then(geohashNode => this._utils.getLocationsInRadius(geohashNode, center, radius))\n      .then(pushKeys => this._db.fetchLocations(pushKeys, startAt,  endAt));\n\n    return this.getLocationsByRadius;\n  } \n\n  /**\n   * Sets the active query object with all locations from given boundaries(south-west / north-east).\n   * The reulst can be limited with startAt and endAt. e.g. 1 - 50\n   * \n   * Needs to be called in a function chain with .on() or .once()\n   * \n   * @param {Object} boundaries Boundaries object which builds the rectangle query borders.\n   * @param {number} [startAt=1] The entry to start at - e.g. start for pagination.\n   * @param {number} [endAt=undefined] The etnry to end at. Default returns all.\n   * @return {function} The function itself to make .on() and .once() chains possible.\n   */\n  getLocationsByBoundaries(boundaries, startAt = 1, endAt = undefined) {\n    GofValidation.validateLocationsByBoundaries(\n      boundaries, \n      startAt, \n      endAt, \n      \"getLocationsByBoundaries()\",\n    );\n\n    this._activeQuery.parameters = { boundaries, startAt, endAt }\n    const precision = this._utils.caluclatePrecisionFromBoundaries(boundaries);\n    this._activeQuery.geohashes = this._utils.getGeohashesInBoundaries(boundaries, precision);\n\n    this._activeQuery.entries = this._db.getLocationsFromGeohashes(this._activeQuery.geohashes)\n      .then(geohashNodes => this._utils.getLocationsInBoundaries(geohashNodes, boundaries))\n      .then(pushKeys => this._db.fetchLocations(pushKeys, startAt,  endAt));\n\n    return this.getLocationsByBoundaries;\n  }\n\n  /**\n   * Creates a new entry in the database and sets all the according locations. (geohashes)\n   * priority and maxPrecison are the geohash lengths. e.g. (prio of 4 == abcd).\n   * \n   * Low priority (1-4) can slow up the speed on apps with massive scaling.\n   *\n   * @param {Object} entry The new entry to create.\n   * @param {number} [priority=5] The priority of the new entry. (1 = high prio, 5 = low prio)\n   * @param {number} [maxPrecision=9] The maximum geohash precision. (7 - 9)\n   * @return {Promise.<Object>} A promise which is fulfilled once the entry was created.\n   */\n  createEntry(entry, priority = 5, maxPrecision = 9) {\n    GofValidation.validateCreateEntry(entry, priority, maxPrecision, \"createEntry()\");\n    const geohash = this._utils.getGeohashByLocation(entry.location, maxPrecision);\n    const geohashPrecisions = this._utils.getGeohashPrecisions(geohash, priority, maxPrecision);\n    const entryWithPrecisions = this._utils.setPrecisionsForEntry(priority, entry);\n\n    return this._db.pushEntry(entryWithPrecisions)\n      .then(data => this._db.setGeohashLocations(data.key, entry.location, geohashPrecisions));\n  }\n\n  /**\n   * Updates an existing entry in the database and all the according locations. (geohashes)\n   * The priority represents the geohash length. e.g. (prio of 4 == abcd).\n   * \n   * Low priority (1-4) can slow up the speed on apps with massive scaling.\n   *\n   * @param {string} pushKey The firebase push-key of the entry to update.\n   * @param {Object} newValue The new value of the entry to update.\n   * @param {number} [priority=5] The priority of the entry to update. (1 = high prio, 5 = low prio)\n   * @return {Promise.<Object>} A promise which is fulfilled once the entry was updated.\n   */\n  updateEntryLocation(pushKey, newValue, priority = 5) {\n    GofValidation.validateUpdateEntryLocation(pushKey, newValue, priority, \"updateEntryLocation()\");\n    return this._db.updateEntry(pushKey, newValue, priority);\n  }\n\n  /**\n   * Deletes an existing entry in the database and all the according locations. (geohashes)\n   *\n   * @param {string} pushKey The firebase push-key of the entry to delete.\n   * @return {Promise.<Object>} A promise which is fulfilled once the entry was deleted.\n   */\n  deleteEntry(pushKey) {\n    GofValidation.validateDeleteEntry(pushKey, \"deleteEntry()\");\n    return this._db.deleteEntry(pushKey);\n  }\n\n  /**\n   * Registers the on() and once() listeners on the query functions\n   */\n  registerEvents() {\n    /**\n     * Event listeners for getLocationsByBoundaries. Returns the query result based on events.\n     *\n     * @param {string} type The event type.\n     * @return {Promise.<Object>} A promise which is fulfilled each time the event fires. \n     * Be aware the promise was modified and is able to stream data, similair to a callback.\n     */\n    this.getLocationsByBoundaries.on = type => this.attachQueryEvent(type, \"bounds\", () => {\n      this.getLocationsByBoundaries(\n        this._activeQuery.parameters.boundaries, \n        this._activeQuery.parameters.startAt, \n        this._activeQuery.parameters.endAt,\n      );\n    });\n\n\n    /**\n     * Event listeners for getLocationsByRadius. Returns the query result based on events.\n     *\n     * @param {string} type The event type.\n     * @return {Promise.<Object>} A promise which is fulfilled each time the event fires. \n     * Be aware the promise was modified and is able to stream data, similair to a callback.\n     */\n    this.getLocationsByRadius.on = type => this.attachQueryEvent(type, \"radius\", () => {\n      this.getLocationsByRadius(\n        this._activeQuery.parameters.center, \n        this._activeQuery.parameters.radius,\n        this._activeQuery.parameters.startAt, \n        this._activeQuery.parameters.endAt,\n      );\n    });\n\n    /**\n     * Returns the query result for getLocationsByBoundaries once.\n     *\n     * @return {Promise.<Object>} A promise which is fulfilled once the query completed. \n     */\n    this.getLocationsByBoundaries.once = () => this._activeQuery.entries;\n\n    /**\n     * Returns the query result for getLocationsByRadius once.\n     *\n     * @return {Promise.<Object>} A promise which is fulfilled once the query completed. \n     */\n    this.getLocationsByRadius.once = () => this._activeQuery.entries;\n  }\n\n  /**\n   * Attaches the event listener and returns the streamable promise.\n   *\n   * @param {string} type The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\".\n   * @param {string} eventNmae The name of the event to create.\n   * @param {function} queryCb The callback to execute once an event fires.\n   * @return {Promise.<Object>} A promise which is fulfilled each time the event fires.\n   * Be aware the promise was modified and is able to stream data, similair to a callback.\n   */\n  attachQueryEvent(type, eventNmae, queryCb) {\n    GofValidation.validateOn(type, \"on()\");\n    const event = new Event(eventNmae);\n    let cb;\n    const streamingPromise = {\n      then: (fn) => {\n        cb = fn;\n        window.dispatchEvent(event);\n      },\n    };\n    \n    // attach the firebase db listeners to the event listener\n    this._activeQuery.dbListeners = GofDbListeners.attachDbListeners(\n      type, \n      this._db._refs, \n      this._activeQuery.geohashes, \n      event,\n    );\n\n    // add the event listener\n    window.addEventListener(eventNmae, () => {\n      queryCb();\n      this._activeQuery.entries.then(entries => cb(entries));\n    });\n\n    return streamingPromise;\n  }\n\n  /**\n   * Destroys the existing query and all of its event listeners.\n   */\n  destroy() {\n    if (this._activeQuery.dbListeners.length) {\n      this._activeQuery.dbListeners.forEach((listener) => {\n        listener.off();\n      });\n      this._activeQuery.dbListeners = [];\n    }\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/gof.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "Gof",
    "memberof": "src/gof.js",
    "static": true,
    "longname": "src/gof.js~Gof",
    "access": "public",
    "export": true,
    "importPath": "gof/src/gof.js",
    "importStyle": "Gof",
    "description": "geo on fire entry point ",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name for the Gof query."
      },
      {
        "nullable": null,
        "types": [
          "Firebase"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": "The Firebase database reference - database().ref()"
      }
    ]
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "_utils",
    "memberof": "src/gof.js~Gof",
    "static": false,
    "longname": "src/gof.js~Gof#_utils",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "_db",
    "memberof": "src/gof.js~Gof",
    "static": false,
    "longname": "src/gof.js~Gof#_db",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "_activeQuery",
    "memberof": "src/gof.js~Gof",
    "static": false,
    "longname": "src/gof.js~Gof#_activeQuery",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "{\"geohashes\": *, \"entries\": *, \"parameters\": *, \"dbListeners\": *}"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "getLocationsByRadius",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#getLocationsByRadius",
    "access": "public",
    "description": "Sets the active query object with all locations from a given radius(km).\nThe reulst can be limited with startAt and endAt. e.g. 1 - 50\n\nNeeds to be called in a function chain with .on() or .once()",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius in kilometers."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "startAt",
        "description": "The entry to start at - e.g. start for pagination."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "endAt",
        "description": "The etnry to end at. Default returns all."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "The function itself to make .on() and .once() chains possible."
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "getLocationsByBoundaries",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#getLocationsByBoundaries",
    "access": "public",
    "description": "Sets the active query object with all locations from given boundaries(south-west / north-east).\nThe reulst can be limited with startAt and endAt. e.g. 1 - 50\n\nNeeds to be called in a function chain with .on() or .once()",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "Boundaries object which builds the rectangle query borders."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "startAt",
        "description": "The entry to start at - e.g. start for pagination."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "endAt",
        "description": "The etnry to end at. Default returns all."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "The function itself to make .on() and .once() chains possible."
    }
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "createEntry",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#createEntry",
    "access": "public",
    "description": "Creates a new entry in the database and sets all the according locations. (geohashes)\npriority and maxPrecison are the geohash lengths. e.g. (prio of 4 == abcd).\n\nLow priority (1-4) can slow up the speed on apps with massive scaling.",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The new entry to create."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "priority",
        "description": "The priority of the new entry. (1 = high prio, 5 = low prio)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "9",
        "defaultRaw": 9,
        "name": "maxPrecision",
        "description": "The maximum geohash precision. (7 - 9)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry was created."
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "updateEntryLocation",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#updateEntryLocation",
    "access": "public",
    "description": "Updates an existing entry in the database and all the according locations. (geohashes)\nThe priority represents the geohash length. e.g. (prio of 4 == abcd).\n\nLow priority (1-4) can slow up the speed on apps with massive scaling.",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry to update."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The new value of the entry to update."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "priority",
        "description": "The priority of the entry to update. (1 = high prio, 5 = low prio)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry was updated."
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "deleteEntry",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#deleteEntry",
    "access": "public",
    "description": "Deletes an existing entry in the database and all the according locations. (geohashes)",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry to delete."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled once the entry was deleted."
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "registerEvents",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#registerEvents",
    "access": "public",
    "description": "Registers the on() and once() listeners on the query functions",
    "lineNumber": 145,
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "attachQueryEvent",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#attachQueryEvent",
    "access": "public",
    "description": "Attaches the event listener and returns the streamable promise.",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\"."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "eventNmae",
        "description": "The name of the event to create."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "queryCb",
        "description": "The callback to execute once an event fires."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Object>"
      ],
      "spread": false,
      "description": "A promise which is fulfilled each time the event fires.\nBe aware the promise was modified and is able to stream data, similair to a callback."
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/gof.js~Gof",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/gof.js~Gof#destroy",
    "access": "public",
    "description": "Destroys the existing query and all of its event listeners.",
    "lineNumber": 233,
    "params": [],
    "return": null
  },
  {
    "__docId__": 98,
    "kind": "file",
    "name": "src/validation/parameters/boundaries.parameter.js",
    "content": "import GofCoordinatesValidation from \"../validators/coordinates.validation\";\nimport GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {Object} boundaries Boundaries object whichgets validated.\n * @param {string} fName The name of the executed function.\n * @param {string} parameter The name of the boundaries parameter.\n */\nexport default function validateBoundariesParameter(boundaries, fName, parameter) {\n  GofCoordinatesValidation.validateCoordinates(boundaries.sw, fName, `${parameter}.sw`);\n  GofCoordinatesValidation.validateCoordinates(boundaries.ne, fName, `${parameter}.ne`);\n\n  GofBasicValidation.isHigherThan(\n    boundaries.sw.lat, \n    boundaries.ne.lat, \n    { \n      fName, \n      p1: \"boundaries.sw.lat\", \n      p2: \"boundaries.ne.lat\", \n    },\n  );  \n  \n  GofBasicValidation.isHigherThan(\n    boundaries.sw.lng, \n    boundaries.ne.lng, \n    { \n      fName, \n      p1: \"boundaries.sw.lng\", \n      p2: \"boundaries.ne.lng\", \n    },\n  );\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/boundaries.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 99,
    "kind": "function",
    "name": "validateBoundariesParameter",
    "memberof": "src/validation/parameters/boundaries.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/boundaries.parameter.js~validateBoundariesParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/boundaries.parameter.js",
    "importStyle": "validateBoundariesParameter",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "Boundaries object whichgets validated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "parameter",
        "description": "The name of the boundaries parameter."
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "src/validation/parameters/center.parameter.js",
    "content": "import GofCoordinatesValidation from \"../validators/coordinates.validation\";\n\n/**\n * \n * @param {Object} center Location object which gets validated.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateCenterParameter(center, fName) {\n  GofCoordinatesValidation.validateCoordinates(center, fName, \"center\");\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/center.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "function",
    "name": "validateCenterParameter",
    "memberof": "src/validation/parameters/center.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/center.parameter.js~validateCenterParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/center.parameter.js",
    "importStyle": "validateCenterParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which gets validated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "file",
    "name": "src/validation/parameters/db.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {Firebase} db - The Firebase database reference which gets validated.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateDbParameter(db, fName) {\n  GofBasicValidation.validateObject(db, { fName, p1: \"firebase.database()\" });\n  GofBasicValidation.validateReference(db, { fName, p1: \"firebase.database()\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/db.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 103,
    "kind": "function",
    "name": "validateDbParameter",
    "memberof": "src/validation/parameters/db.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/db.parameter.js~validateDbParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/db.parameter.js",
    "importStyle": "validateDbParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Firebase"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": "The Firebase database reference which gets validated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "file",
    "name": "src/validation/parameters/entry-limitation.parameters.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\"\n\n/**\n * \n * @param {number} startAt The entry to start at.\n * @param {number} endAt The etnry to end at.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateEntryLimitationParameters(startAt, endAt, fName) {\n  // undefined is a possible value\n  if (endAt) {\n    // validate endAt first to make sure it contains a number\n    validateEndAt(endAt, fName, \"endAt\");\n  }\n  validateStartAt(startAt, endAt, fName, \"startAt\");\n}\n\n/**\n * \n * @param {number} startAt The number of the entry to start at.\n * @param {number} endAt The number of the entry to end at.\n * @param {string} fName The name of the executed function.\n * @param {string} p1 The name of the passed parameter. (shortterm for first parameter)\n */\nfunction validateStartAt(startAt, endAt, fName, p1) {    \n  GofBasicValidation.validateNumber(startAt, { fName, p1 });\n  GofBasicValidation.isLowerThan(startAt, 1, { fName, p1, p2: \"1\" });\n  GofBasicValidation.hasDecimalPlaces(startAt, { fName, p1 });\n  GofBasicValidation.isHigherThan(startAt, endAt, { fName, p1, p2: \"endAt\" });\n}\n\n/**\n * \n * @param {number} endAt The number of the entry to end at.\n * @param {string} fName The name of the executed function.\n * @param {string} p1 The name of the passed parameter. (shortterm for first parameter)\n */\nfunction validateEndAt(endAt, fName, p1) {\n  GofBasicValidation.validateNumber(endAt, { fName, p1 });\n  GofBasicValidation.hasDecimalPlaces(endAt, { fName, p1 });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/entry-limitation.parameters.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "validateEntryLimitationParameters",
    "memberof": "src/validation/parameters/entry-limitation.parameters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/entry-limitation.parameters.js~validateEntryLimitationParameters",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/entry-limitation.parameters.js",
    "importStyle": "validateEntryLimitationParameters",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startAt",
        "description": "The entry to start at."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The etnry to end at."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "validateStartAt",
    "memberof": "src/validation/parameters/entry-limitation.parameters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/entry-limitation.parameters.js~validateStartAt",
    "access": "public",
    "export": false,
    "importPath": "gof/src/validation/parameters/entry-limitation.parameters.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startAt",
        "description": "The number of the entry to start at."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The number of the entry to end at."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "The name of the passed parameter. (shortterm for first parameter)"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "validateEndAt",
    "memberof": "src/validation/parameters/entry-limitation.parameters.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/entry-limitation.parameters.js~validateEndAt",
    "access": "public",
    "export": false,
    "importPath": "gof/src/validation/parameters/entry-limitation.parameters.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The number of the entry to end at."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "The name of the passed parameter. (shortterm for first parameter)"
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/validation/parameters/entry.parameter.js",
    "content": "import GofCoordinatesValidation from \"../validators/coordinates.validation\";\n\n/**\n * \n * @param {Object} entry The entry to validate.\n * @param {string} fName The name of the executed function.\n * @param {string} parameter The name of the entry parameter.\n */\nexport default function validateEntryParameter(entry, fName, parameter) {\n  GofCoordinatesValidation.validateCoordinates(entry.location, fName, parameter);\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/entry.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "validateEntryParameter",
    "memberof": "src/validation/parameters/entry.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/entry.parameter.js~validateEntryParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/entry.parameter.js",
    "importStyle": "validateEntryParameter",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The entry to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "parameter",
        "description": "The name of the entry parameter."
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/validation/parameters/event-type.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {string} type The event type to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateEventTypeParameter(type, fName) {\n  GofBasicValidation.validateString(type, { fName, p1: \"type\" });\n  GofBasicValidation.validateEventType(type, { fName, p1: \"type\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/event-type.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "validateEventTypeParameter",
    "memberof": "src/validation/parameters/event-type.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/event-type.parameter.js~validateEventTypeParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/event-type.parameter.js",
    "importStyle": "validateEventTypeParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/validation/parameters/max-precision.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {number} maxPrecision The maximum geohash precision to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateMaxPrecisionParameter(maxPrecision, fName) {\n  GofBasicValidation.validateNumber(maxPrecision, { fName, p1: \"maxPrecision\" });\n  GofBasicValidation.hasDecimalPlaces(maxPrecision, { fName, p1: \"maxPrecision\" });\n  GofBasicValidation.isLowerThan(maxPrecision, 7, { fName, p1: \"maxPrecision\", p2: \"7\" });\n  GofBasicValidation.isHigherThan(maxPrecision, 9, { fName, p1: \"maxPrecision\", p2: \"9\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/max-precision.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "validateMaxPrecisionParameter",
    "memberof": "src/validation/parameters/max-precision.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/max-precision.parameter.js~validateMaxPrecisionParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/max-precision.parameter.js",
    "importStyle": "validateMaxPrecisionParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPrecision",
        "description": "The maximum geohash precision to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/validation/parameters/name.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {string} name - Name to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateNameParameter(name, fName) {\n  GofBasicValidation.validateString(name, { fName, p1: \"name\" });\n  GofBasicValidation.containsSpecialChars(name, { fName, p1: \"name\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/name.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "validateNameParameter",
    "memberof": "src/validation/parameters/name.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/name.parameter.js~validateNameParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/name.parameter.js",
    "importStyle": "validateNameParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/validation/parameters/new-value.parameter.js",
    "content": "import validateEntryParameter from \"./entry.parameter\";\nimport validatePriorityParameter from \"./priority.parameter\";\nimport validateMaxPrecisionParameter from \"./max-precision.parameter\";\n\n/**\n * \n * @param {Object} newValue The new entry value to validate.\n * @param {string} fName The name of the executed function.\n * @param {string} parameter The name of the new value parameter.\n */\nexport default function validateNewValueParameter(newValue, fName, parameter) {\n  validateEntryParameter(newValue, fName, \"newValue.location\");\n  validatePriorityParameter(newValue.minPrecision, fName);\n  validateMaxPrecisionParameter(newValue.maxPrecision, fName);\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/new-value.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "validateNewValueParameter",
    "memberof": "src/validation/parameters/new-value.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/new-value.parameter.js~validateNewValueParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/new-value.parameter.js",
    "importStyle": "validateNewValueParameter",
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The new entry value to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "parameter",
        "description": "The name of the new value parameter."
      }
    ],
    "return": null
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/validation/parameters/priority.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\"\n\n/**\n * \n * @param {number} priority The priority to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validatePriorityParameter(priority, fName) {\n  GofBasicValidation.validateNumber(priority, { fName, p1: \"priority\" });\n  GofBasicValidation.hasDecimalPlaces(priority, { fName, p1: \"priority\" });\n  GofBasicValidation.isLowerThan(priority, 1, { fName, p1: \"priority\", p2: \"1\" });\n  GofBasicValidation.isHigherThan(priority, 5, { fName, p1: \"priority\", p2: \"5\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/priority.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "validatePriorityParameter",
    "memberof": "src/validation/parameters/priority.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/priority.parameter.js~validatePriorityParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/priority.parameter.js",
    "importStyle": "validatePriorityParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "The priority to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/validation/parameters/push-key.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {string} pushKey The firebase push-key to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validatePushKeyParameter(pushKey, fName) {\n  GofBasicValidation.validateString(pushKey, { fName, p1: \"pushKey\" });\n  GofBasicValidation.containsSpecialChars(pushKey, { fName, p1: \"pushKey\" });\n  GofBasicValidation.containsSpaces(pushKey, { fName, p1: \"pushKey\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/push-key.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "validatePushKeyParameter",
    "memberof": "src/validation/parameters/push-key.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/push-key.parameter.js~validatePushKeyParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/push-key.parameter.js",
    "importStyle": "validatePushKeyParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "file",
    "name": "src/validation/parameters/radius.parameter.js",
    "content": "import GofBasicValidation from \"../validators/basic.validation\";\n\n/**\n * \n * @param {number} radius The query radius to validate.\n * @param {string} fName The name of the executed function.\n */\nexport default function validateRadiusParameter(radius, fName) {\n  GofBasicValidation.validateNumber(radius, { fName, p1: \"radius\" });\n  GofBasicValidation.isLowerThan(radius, 0, { fName, p1: \"radius\", p2: \"0\" });\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/parameters/radius.parameter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "validateRadiusParameter",
    "memberof": "src/validation/parameters/radius.parameter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/parameters/radius.parameter.js~validateRadiusParameter",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/parameters/radius.parameter.js",
    "importStyle": "validateRadiusParameter",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/validation/validation.js",
    "content": "import validateDbParameter from \"./parameters/db.parameter\";\nimport validateCenterParameter from \"./parameters/center.parameter\";\nimport validateRadiusParameter from \"./parameters/radius.parameter\";\nimport validateEntryLimitationParameters from \"./parameters/entry-limitation.parameters\";\nimport validateBoundariesParameter from \"./parameters/boundaries.parameter\";\nimport validateEntryParameter from \"./parameters/entry.parameter\";\nimport validatePriorityParameter from \"./parameters/priority.parameter\";\nimport validateMaxPrecisionParameter from \"./parameters/max-precision.parameter\";\nimport validateNameParameter from \"./parameters/name.parameter\";\nimport validatePushKeyParameter from \"./parameters/push-key.parameter\";\nimport validateNewValueParameter from \"./parameters/new-value.parameter\";\nimport validateEventTypeParameter from \"./parameters/event-type.parameter\";\n\n/** \n * geo on fire validation\n */\nexport default class GofValidation {\n  /**\n   * Validates the parameters of the Gof class constructor.\n   *\n   * @param {string} name - name for the Gof query\n   * @param {Firebase} db - The Firebase database reference - database().ref()\n   * @param {string} fName The name of the executed function.\n   */\n  static validateConstructor(name, db, fName) {\n    validateNameParameter(name, fName);\n    validateDbParameter(db, fName);\n  }\n\n  /**\n   * Validates the parameters of the getLocationsByRadius Gof class member function.\n   *\n   * @param {Object} center Location object which represents the center of the given radius.\n   * @param {number} radius The query radius in kilometers.\n   * @param {number} startAt The entry to start at.\n   * @param {number} endAt The etnry to end at.\n   * @param {string} fName The name of the executed function.\n   */\n  static validateLocationsByRadius(center, radius, startAt, endAt, fName) {\n    validateCenterParameter(center, fName);\n    validateRadiusParameter(radius, fName);\n    validateEntryLimitationParameters(startAt, endAt, fName);\n  }\n\n  /**\n   * Validates the parameters of the getLocationsByBoundaries Gof class member function.\n   *\n   * @param {Object} boundaries Boundaries object which builds the rectangle query borders.\n   * @param {number} startAt The entry to start at.\n   * @param {number} endAt The etnry to end at.\n   * @param {string} fName The name of the executed function.\n   */\n  static validateLocationsByBoundaries(boundaries, startAt, endAt, fName) {\n    validateBoundariesParameter(boundaries, fName, \"boundaries\");\n    validateEntryLimitationParameters(startAt, endAt, fName);\n  }\n\n  /**\n   * Validates the parameters of the createEntry Gof class member function.\n   *\n   * @param {Object} entry The new entry to create.\n   * @param {number} priority The priority of the new entry.\n   * @param {number} maxPrecision The maximum geohash precision.\n   * @param {string} fName The name of the executed function.\n   */\n  static validateCreateEntry(entry, priority, maxPrecision, fName) {\n    validateEntryParameter(entry, fName, \"entry.location\");\n    validatePriorityParameter(priority, fName);\n    validateMaxPrecisionParameter(maxPrecision, fName);\n  }\n\n  /**\n   * Validates the parameters of the updateEntryLocation Gof class member function.\n   *\n   * @param {string} pushKey The firebase push-key of the entry to update.\n   * @param {Object} newValue The new value of the entry to update.\n   * @param {number} priority The priority of the entry to update.\n   * @param {string} fName The name of the executed function.\n   */\n  static validateUpdateEntryLocation(pushKey, newValue, priority, fName) {\n    validatePushKeyParameter(pushKey, fName);\n    validateNewValueParameter(newValue, fName, \"newValue.location\");\n    validatePriorityParameter(priority, fName);\n  }\n\n  /**\n   * Validates the parameters of the deleteEntryLocation Gof class member function.\n   *\n   * @param {string} pushKey The firebase push-key of the entry to delete.\n   * @param {string} fName The name of the executed function.\n   */\n  static validateDeleteEntry(pushKey, fName) {\n    validatePushKeyParameter(pushKey, fName);\n  }\n\n  /**\n   * Validates the parameters of the .on() event listener.\n   *\n   * @param {string} type The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\".\n   * @param {string} fName The name of the executed function.\n   */\n  static validateOn(type, fName) {\n    validateEventTypeParameter(type, fName);\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/validation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "GofValidation",
    "memberof": "src/validation/validation.js",
    "static": true,
    "longname": "src/validation/validation.js~GofValidation",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/validation.js",
    "importStyle": "GofValidation",
    "description": "geo on fire validation",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "validateConstructor",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateConstructor",
    "access": "public",
    "description": "Validates the parameters of the Gof class constructor.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name for the Gof query"
      },
      {
        "nullable": null,
        "types": [
          "Firebase"
        ],
        "spread": false,
        "optional": false,
        "name": "db",
        "description": "The Firebase database reference - database().ref()"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "validateLocationsByRadius",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateLocationsByRadius",
    "access": "public",
    "description": "Validates the parameters of the getLocationsByRadius Gof class member function.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "center",
        "description": "Location object which represents the center of the given radius."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "The query radius in kilometers."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startAt",
        "description": "The entry to start at."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The etnry to end at."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "validateLocationsByBoundaries",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateLocationsByBoundaries",
    "access": "public",
    "description": "Validates the parameters of the getLocationsByBoundaries Gof class member function.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "boundaries",
        "description": "Boundaries object which builds the rectangle query borders."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "startAt",
        "description": "The entry to start at."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "endAt",
        "description": "The etnry to end at."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "validateCreateEntry",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateCreateEntry",
    "access": "public",
    "description": "Validates the parameters of the createEntry Gof class member function.",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "entry",
        "description": "The new entry to create."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "The priority of the new entry."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxPrecision",
        "description": "The maximum geohash precision."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "validateUpdateEntryLocation",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateUpdateEntryLocation",
    "access": "public",
    "description": "Validates the parameters of the updateEntryLocation Gof class member function.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry to update."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newValue",
        "description": "The new value of the entry to update."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "The priority of the entry to update."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "validateDeleteEntry",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateDeleteEntry",
    "access": "public",
    "description": "Validates the parameters of the deleteEntryLocation Gof class member function.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "pushKey",
        "description": "The firebase push-key of the entry to delete."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "validateOn",
    "memberof": "src/validation/validation.js~GofValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validation.js~GofValidation.validateOn",
    "access": "public",
    "description": "Validates the parameters of the .on() event listener.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type: \"value\", \"child_added\", \"child_changed\", \"child_removed\"."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      }
    ],
    "return": null
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "src/validation/validators/basic.validation.js",
    "content": "/** \n * geo on fire basic validation\n */\nexport default class GofBasicValidation {\n  /**\n   * Checks if a given value is a valid number.\n   *\n   * @param {*} value The value to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateNumber(value, errorInfos) {\n    if (typeof value !== \"number\") {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} must be of type number!`);\n    } else if (isNaN(value)) {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} should not contain the value NaN!`);\n    }\n  }\n\n  /**\n   * Checks if a given value is a valid string.\n   *\n   * @param {*} value The value to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateString(value, errorInfos) {\n    if (typeof value !== \"string\") {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} must be of type string!`);\n    }\n  }\n\n  /**\n   * Checks if a given value is a valid function.\n   *\n   * @param {*} value The value to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateFunction(value, errorInfos) {\n    if (typeof value !== \"function\") {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} must be of type function!`);\n    }\n  }\n\n  /**\n   * Checks if a given value is a valid object.\n   *\n   * @param {*} value The value to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateObject(value, errorInfos) {\n    if (typeof value !== \"object\") {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} must be of type object!`);\n    }\n  }\n\n  /**\n   * Checks if a given string contains special characters.\n   * In this case \"-\", \" \" and \"_\" are allowed.\n   *\n   * @param {string} string The string to check for containing special chars.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static containsSpecialChars(string, errorInfos) {\n    if (string.match(/[^A-Za-z0-9\\-_ ]/)) {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} should not contain special chars!`);\n    }\n  }\n\n  /**\n   * Checks if a given string contains spaces.\n   *\n   * @param {string} string The string to check for containing spaces.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static containsSpaces(string, errorInfos) {\n    if (/\\s/.test(string)) {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} should not contain white spaces!`);\n    }\n  }\n\n  /**\n   * Checks if a given value is a valid firebase reference\n   * It simply checks if the .child() function exists on the provided value.\n   *\n   * @param {*} value The value to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateReference(value, errorInfos) {\n    if (typeof value.child !== \"function\") {\n      this.throwError(\n        errorInfos.fName, `${errorInfos.p1} is not a valid firebase database reference!`,\n      );\n    }\n  }\n\n  /**\n   * Checks if a given event type is a valid.\n   * Allowed are \"value\", \"child_added\", \"child_changed\", \"child_removed\".\n   *\n   * @param {string} type The event type to validate.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static validateEventType(type, errorInfos) {\n    if (type === \"child_moved\") {\n      this.throwError(\n        errorInfos.fName, `${errorInfos.p1} of \"child_moved\" is not supported. `\n        + `You have to use one of the follwoing types: `\n        + `\"value\", \"child_added\", \"child_changed\", \"child_removed\"`, // breaks for linting\n      );\n    } else if (type !== \"value\" \n               && type !== \"child_added\" \n               && type !== \"child_changed\" \n               && type !== \"child_removed\") { // eslint rule sry\n      this.throwError(\n        errorInfos.fName, `\"${type}\" is not a valid ${errorInfos.p1}. `\n        + `You have to use one of the follwoing types: `\n        + `\"value\", \"child_added\", \"child_changed\", \"child_removed\"`, // breaks for linting\n      );\n    }\n  }\n\n  /**\n   * Checks if the first provided number is lower than the second provided number.\n   *\n   * @param {number} firstNumber The first number to compare.\n   * @param {number} secondNumber The second number to compare.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static isLowerThan(firstNumber, secondNumber, errorInfos) {\n    if (firstNumber < secondNumber) {\n      this.throwError(\n        errorInfos.fName, `${errorInfos.p1} must be higher or same as ${errorInfos.p2}!`,\n      );\n    }\n  }\n\n  /**\n   * Checks if the first provided number is higher than the second provided number.\n   *\n   * @param {number} firstNumber The first number to compare.\n   * @param {number} secondNumber The second number to compare.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static isHigherThan(firstNumber, secondNumber, errorInfos) {\n    if (firstNumber > secondNumber) {\n      this.throwError(\n        errorInfos.fName, `${errorInfos.p1} must be lower or same as ${errorInfos.p2}!`,\n      );\n    }\n  }\n\n  /**\n   * Checks if a given number contains decimal places.\n   *\n   * @param {number} number The number to check for decimal places.\n   * @param {Object} errorInfos A object containing the important error info's e.g. function name.\n   */\n  static hasDecimalPlaces(number, errorInfos) {\n    if (number % 1 !== 0) {\n      this.throwError(errorInfos.fName, `${errorInfos.p1} should not contain decimal places!`);\n    }\n  }\n\n  /**\n   * Throws an error based on the executed function and the failed validation.\n   *\n   * @param {string} fName The name of the executed function.\n   * @param {string} error The error message to throw.\n   */\n  static throwError(fName, error) {\n    throw new Error(`${fName} - ${error}`);\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/validators/basic.validation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "class",
    "name": "GofBasicValidation",
    "memberof": "src/validation/validators/basic.validation.js",
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/validators/basic.validation.js",
    "importStyle": "GofBasicValidation",
    "description": "geo on fire basic validation",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "validateNumber",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateNumber",
    "access": "public",
    "description": "Checks if a given value is a valid number.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "validateString",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateString",
    "access": "public",
    "description": "Checks if a given value is a valid string.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "method",
    "name": "validateFunction",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateFunction",
    "access": "public",
    "description": "Checks if a given value is a valid function.",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "validateObject",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateObject",
    "access": "public",
    "description": "Checks if a given value is a valid object.",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 139,
    "kind": "method",
    "name": "containsSpecialChars",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.containsSpecialChars",
    "access": "public",
    "description": "Checks if a given string contains special characters.\nIn this case \"-\", \" \" and \"_\" are allowed.",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "The string to check for containing special chars."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "containsSpaces",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.containsSpaces",
    "access": "public",
    "description": "Checks if a given string contains spaces.",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "The string to check for containing spaces."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "validateReference",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateReference",
    "access": "public",
    "description": "Checks if a given value is a valid firebase reference\nIt simply checks if the .child() function exists on the provided value.",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "validateEventType",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.validateEventType",
    "access": "public",
    "description": "Checks if a given event type is a valid.\nAllowed are \"value\", \"child_added\", \"child_changed\", \"child_removed\".",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The event type to validate."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "isLowerThan",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.isLowerThan",
    "access": "public",
    "description": "Checks if the first provided number is lower than the second provided number.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "firstNumber",
        "description": "The first number to compare."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "secondNumber",
        "description": "The second number to compare."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "isHigherThan",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.isHigherThan",
    "access": "public",
    "description": "Checks if the first provided number is higher than the second provided number.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "firstNumber",
        "description": "The first number to compare."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "secondNumber",
        "description": "The second number to compare."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "hasDecimalPlaces",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.hasDecimalPlaces",
    "access": "public",
    "description": "Checks if a given number contains decimal places.",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "The number to check for decimal places."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "errorInfos",
        "description": "A object containing the important error info's e.g. function name."
      }
    ],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "throwError",
    "memberof": "src/validation/validators/basic.validation.js~GofBasicValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/basic.validation.js~GofBasicValidation.throwError",
    "access": "public",
    "description": "Throws an error based on the executed function and the failed validation.",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "The error message to throw."
      }
    ],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/validation/validators/coordinates.validation.js",
    "content": "import GofBasicValidation from \"./basic.validation\";\n\n/** \n * geo on fire coordinates validation\n */\nexport default class GofCoordinatesValidation {\n  /**\n   * Validates the coordinates latitude/longitude pair.\n   *\n   * @param {Object} coordinates The coordinates lat/lng pair to validate.\n   * @param {string} fName The name of the executed function.\n   * @param {string} parameter The name of the passed parameter.\n   */\n  static validateCoordinates(coordinates, fName, parameter) {\n    this.validateLat(coordinates.lat, fName, `${parameter}.lat`);\n    this.validateLng(coordinates.lng, fName, `${parameter}.lng`);\n  }\n\n  /**\n   * Validates the geographic latitude of a given coordinate.\n   *\n   * @param {number} lat The latitude to validate.\n   * @param {string} fName The name of the executed function.\n   * @param {string} p1 The name of the passed parameter. (shortterm for first parameter)\n   */\n  static validateLat(lat, fName, p1) {\n    GofBasicValidation.validateNumber(lat, { fName, p1 });\n    GofBasicValidation.isHigherThan(lat, 90, { fName, p1, p2: 90 });\n    GofBasicValidation.isLowerThan(lat, -90, { fName, p1, p2: -90 });\n  }\n\n  /**\n   * Validates the geographic longitude of a given coordinate.\n   *\n   * @param {number} lng The longitude to validate.\n   * @param {string} fName The name of the executed function.\n   * @param {string} p1 The name of the passed parameter. (shortterm for first parameter)\n   */\n  static validateLng(lng, fName, p1) {\n    GofBasicValidation.validateNumber(lng, { fName, p1 });\n    GofBasicValidation.isHigherThan(lng, 180, { fName, p1, p2: 180 });\n    GofBasicValidation.isLowerThan(lng, -180, { fName, p1, p2: -180 });\n  }\n}",
    "static": true,
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/src/validation/validators/coordinates.validation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "GofCoordinatesValidation",
    "memberof": "src/validation/validators/coordinates.validation.js",
    "static": true,
    "longname": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation",
    "access": "public",
    "export": true,
    "importPath": "gof/src/validation/validators/coordinates.validation.js",
    "importStyle": "GofCoordinatesValidation",
    "description": "geo on fire coordinates validation",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "validateCoordinates",
    "memberof": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation.validateCoordinates",
    "access": "public",
    "description": "Validates the coordinates latitude/longitude pair.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "coordinates",
        "description": "The coordinates lat/lng pair to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "parameter",
        "description": "The name of the passed parameter."
      }
    ],
    "return": null
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "validateLat",
    "memberof": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation.validateLat",
    "access": "public",
    "description": "Validates the geographic latitude of a given coordinate.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lat",
        "description": "The latitude to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "The name of the passed parameter. (shortterm for first parameter)"
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "validateLng",
    "memberof": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/validation/validators/coordinates.validation.js~GofCoordinatesValidation.validateLng",
    "access": "public",
    "description": "Validates the geographic longitude of a given coordinate.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lng",
        "description": "The longitude to validate."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "fName",
        "description": "The name of the executed function."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "The name of the passed parameter. (shortterm for first parameter)"
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "geo on fire (gof) :fire: \n[![CircleCI](https://circleci.com/gh/Orlandster1998/geo-on-fire/tree/master.svg?style=shield&circle-token=c4bc8569819d11ed6f227e38c9507ddc55a4ddcd)](https://circleci.com/gh/Orlandster1998/geo-on-fire/tree/master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/411bd12fdbea4acc8cb7392edbdd0345)](https://www.codacy.com/app/orlando.wenzinger/geo-on-fire?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Orlandster1998/geo-on-fire&amp;utm_campaign=Badge_Grade)\n[![Inline docs](http://inch-ci.org/github/Orlandster1998/geo-on-fire.svg?branch=master)](http://inch-ci.org/github/Orlandster1998/geo-on-fire)\n[![npm version](https://badge.fury.io/js/gof.svg)](https://badge.fury.io/js/gof)\n===========\nGeo on fire is an open source library to query location based data in Firebase. It follows a whole new principle of architecture, which makes it extremly fast and highly scaleable. With the right setup you are able to query millions of locations in just fractions of a second. You can learn more about the principle in the advanced usage guide. (not online so far, stay tuned)\n\nIn addition it offers you the possibility to listen to the queries in real time and recieve changes based on the event types you've specified. But that's not all. There's a feature which gives you the ability to priorize data and make the user expirience even better.\n\nAnd by the way, there is not just one query method. You can choose between a radius based query (see dog match demo) and a boundaries based query. (see event map demo) \n\nAnd the best, you will automatically recieve the fetched entries. So there is no manual fetching needed.\n\n## Quick links\n\n * [Download](#download)\n * [Getting started](#getting-started)\n * [Guides](#guides)\n * [Documentation](#documentation)\n * [Demos](#demos)\n * [Contributions](#contributions)\n * [License](#license)\n\n\n## Download\nCurrently there are three ways to download the library. But before you download the library make sure Firebase is already installed, since it's not a dependency of gof itself.\n\n> Notice: NodeJS is not supported so far, but it will be added soon. Subscribe [here](https://github.com/Orlandster1998/geo-on-fire/issues/10) to get mentioned when the time is ready.\n\nAdd it like this to your `HTML`\n```html\n<!-- Firebase -->\n<script src=\"https://www.gstatic.com/firebasejs/4.5.0/firebase.js\"></script>\n```\nor install it from npm\n\n```bash\n$ npm install firebase --save\n```\n\n### CDN\nIf you are running gof in the browser you can include it directly from the CDN like this:\n\n```html\n<!-- gof -->\n<script src=\"https://cdn.jsdelivr.net/npm/gof@0.1.0/dist/gof.min.js\"></script>\n```\n\n### npm\nDownload it from the npm repository the following way:\n```bash\n$ npm install gof --save\n```\n### bower\nOr download it from bower the following way:\n```bash\n$ bower install gof --save\n```\n\n## Getting started\nNow let's get started. As you will see, the usage is very simple. \n\nBefore you're able to use gof you need to initialize your firebase project.\n\n```js\nvar fb = firebase.initializeApp(config); // get 'config' from firebase\n```\n\nNow you are able to create a gof reference by simply doing the following.\n\n```js\n// the name of your database nodes e.g. events, hotels - is totally up to you\nvar name = 'entries'; \n\n// the firebase database ref - must be passed with the .ref()\nvar ref = fb.database().ref();\n\n// creates a new geoOnFire instance\nvar gof = new geoOnFire(name, ref);\n```\n\nThat's it! Now you are able to run gof operations. Go trough the guides to see how it works.\n\n## Guides\n### Basic usage\nBasically all the user operations proivded by gof can be splitted in two cateogries. There are writing and there are reading operations. Make sure you always use the built-in methods the library provides to modify your geolocations data. Otherwise there's a chance that you get corrupt and invalid data.\n\n#### writing data\n * [create entries](https://github.com/Orlandster1998/geo-on-fire/wiki/Basic-usage#create-entries)\n * [update entries](https://github.com/Orlandster1998/geo-on-fire/wiki/Basic-usage#update-entries)\n * [delete entries](https://github.com/Orlandster1998/geo-on-fire/wiki/Basic-usage#delete-entries)\n#### reading data (geolocation queries)\n * [query by radius](https://github.com/Orlandster1998/geo-on-fire/wiki/Basic-usage#query-by-radius)\n * [query by boundaries](https://github.com/Orlandster1998/geo-on-fire/wiki/Basic-usage#query-by-boundaries)\n### Advanced usage\nHere you can find some advanced concept to make the best out from gof.\n * [security rules](https://github.com/Orlandster1998/geo-on-fire/wiki/Security-rules)\n * [performance optimization]() (coming soon)\n\n## Documentation\n * [API Reference](https://orlandster1998.github.io/geo-on-fire/)\n * [Gof core principle]() (coming soon)\n \n## Demo's\nCurrently there are the two demo's available. These are just some basic implementations to give you an idea about how powerful gof is. They are far away from perfect.\n * [dog matching app](https://run.plnkr.co/plunks/AYaN8ABEDcMntgbJyLVW/) (tinder clone - using radius query)\n * [event map app](https://run.plnkr.co/plunks/xJgstAvXYcp0w7MbOOjm/) (airbnb like map - using boundaries query)\n\nIs there any gof using project you want to share with the world? Simply create an issue with the url and I do the rest.\n\n## Contributions\nI would love to see your contributions to the project. Till now I was not able to create some guidelines. If there are already any interests so far, we can communicate trough the issues.\n\n## What's next\nCheck out the [1.0.0 milestone](https://github.com/Orlandster1998/geo-on-fire/milestone/3) to see what's next. Generally I've got tons of ideas, but just a very few time to work on them. So if you are interested in contributing you are more than just welcome!\n\nI'm also looking forward to migrate the library to other db services like mongoDB or pouchDB.\n\n## Motivation\nSo basically the reason why I'm doing this, is because I've seen a lot of people struggling while buildung their json database structure. Espacially when it comes to more complex queries, firebase does not support you well enough. (by the way I'm so happy to see the new cloud firestore) This library should kind of like give you an idea.\n\n## License\nMIT\n",
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"gof\",\n  \"version\": \"0.1.0\",\n  \"description\": \"An extreme fast and highly scalable Firebase geo-query library.\",\n  \"main\": \"./index.js\",\n  \"scripts\": {\n    \"prepublish\": \"npm run build-web\",\n    \"preversion\": \"npm run build-web && npm run test && docs\",\n    \"version\": \"git add .\",\n    \"postversion\": \"git push && git push --tags\",\n    \"build\": \"gulp build\",\n    \"build-dev\": \"gulp build-dev\",\n    \"build-web\": \"gulp build-web\",\n    \"build-web-dev\": \"gulp build-web-dev\",\n    \"build-all\": \"gulp\",\n    \"test\": \"gulp build-test && karma start --single-run --browsers ChromeHeadless karma.conf.js\",\n    \"docs\": \"./node_modules/.bin/esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/Orlandster1998/geo-on-fire\"\n  },\n  \"keywords\": [\n    \"firebase\",\n    \"geofire\",\n    \"firebase nearby\",\n    \"geoquery\",\n    \"geo query\",\n    \"firebase, query\"\n  ],\n  \"author\": {\n    \"name\": \"Orlando Wenzinger\",\n    \"url\": \"https://github.com/Orlandster1998\"\n  },\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/Orlandster1998/geo-on-fire/issues?q=is%3Aopen+is%3Aissue+label%3Abug\"\n  },\n  \"files\": [\n    \"LICENSE\",\n    \"README.md\",\n    \"dist/gof.min.js\"\n  ],\n  \"devDependencies\": {\n    \"babel\": \"^6.3.26\",\n    \"babel-core\": \"^6.4.0\",\n    \"babel-eslint\": \"^5.0.4\",\n    \"babel-loader\": \"^6.2.1\",\n    \"babel-plugin-add-module-exports\": \"^0.1.2\",\n    \"babel-plugin-transform-async-to-generator\": \"^6.24.1\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-es2015\": \"^6.3.13\",\n    \"chai\": \"^3.5.0\",\n    \"clean-webpack-plugin\": \"^0.1.8\",\n    \"del\": \"^2.2.0\",\n    \"detect-port\": \"^1.2.1\",\n    \"esdoc\": \"^1.0.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^1.10.3\",\n    \"eslint-config-airbnb\": \"^4.0.0\",\n    \"eslint-loader\": \"^1.2.0\",\n    \"eslint-plugin-standard\": \"^1.3.1\",\n    \"firebase-server\": \"^0.11.0\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-babel\": \"^6.1.1\",\n    \"gulp-env\": \"^0.2.0\",\n    \"gulp-eslint\": \"^1.1.1\",\n    \"gulp-load-plugins\": \"^1.2.0\",\n    \"gulp-util\": \"^3.0.6\",\n    \"karma\": \"^1.7.1\",\n    \"karma-chai\": \"^0.1.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"mocha\": \"^2.5.3\",\n    \"object-assign\": \"^4.0.1\",\n    \"webpack\": \"^1.12.11\",\n    \"webpack-node-externals\": \"^0.4.1\"\n  },\n  \"library\": {\n    \"name\": \"geo-on-fire\",\n    \"entry\": \"gof.js\",\n    \"dist-node\": \"gof.js\",\n    \"dist-web\": \"gof.min.js\",\n    \"bundle-node\": true\n  },\n  \"dependencies\": {\n    \"codacy-coverage\": \"^2.0.3\",\n    \"ngeohash\": \"^0.6.0\"\n  }\n}\n",
    "longname": "/Users/orlando/Desktop/contributions/geo-on-fire/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]